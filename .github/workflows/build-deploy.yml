name: Build and deploy site

on:
  repository_dispatch:
  schedule:
    - cron: '29 11 * * *'
  pull_request:
  push:
    branches: [main]

jobs:
  cancel-superseded:
    name: Cancel superseded
    runs-on: ubuntu-20.04
    steps:
        - name: Cancel Previous Runs
          uses: styfle/cancel-workflow-action@0.7.0
          with:
            access_token: ${{ github.token }}

  build-core-site:
    needs: cancel-superseded
    name: Build core site
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Ruby 2.7
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.7

      - uses: actions/cache@v2
        with:
          path: /opt/hostedtoolcache/Ruby/2.7.2/x64/lib/ruby/gems
          key: ${{ runner.os }}-gems-v2-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-v2

      - name: Install deps
        run: |
          gem install bundler jekyll
          bundle install

      - name: Build site
        run: bundle exec jekyll build -d dist

      - name: Debug
        run: |
          cat Gemfile.lock
          bundle info jekyll
          bundle info jekyll-theme-cayman
          ls
          cat dist/index.html

      - name: Upload built site
        uses: actions/upload-artifact@v2
        with:
          name: core-site
          path: dist/*

  build-msprime-docs:
    name: Build msprime docs
    needs: cancel-superseded
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout msprime
        with:
          ref: main
          repository: tskit-dev/msprime
          submodules: true
          fetch-depth: 0 # Needed for setuptools_scm to work correctly

      - name: Get commit SHA1 for cache
        run: git rev-parse HEAD > SHA1

      - uses: actions/cache@v2
        id: docs-cache
        name: Docs cache
        with:
          path: dist
          key: msprime-docs-v9-${{ hashFiles('SHA1') }}

      - name: Install GSL
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: sudo apt-get install -y libgsl0-dev

      - uses: actions/setup-python@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Setup Python
        with:
          python-version: 3.8

      - uses: actions/cache@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Virtualenv cache - latest
        id: cache-latest
        with:
          path: venv-latest
          key: msprime-docs-venv-v7-${{ hashFiles('requirements/CI-docs/requirements.txt') }}

      - name: Build virtualenv
        if: steps.cache-latest.outputs.cache-hit != 'true' && steps.docs-cache.outputs.cache-hit != 'true'
        run: python -m venv venv-latest

      - name: Install deps
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          venv-latest/bin/activate && pip install -r requirements/CI-docs/requirements.txt

      - name: Build C module
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: venv-latest/bin/activate && make

      - name: Build Docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          venv-latest/bin/activate
          cd docs
          make dist
          # make dist changes the _conf.yml file to write the version number, so drop the change
          git checkout .

      - name: Copy docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p dist
          cp -r docs/_build/html dist/latest

      - name: Checkout latest stable tag
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          git fetch --tags --recurse-submodules=no
          git checkout `git tag --list --sort=taggerdate | grep -vi "[baC]" | tail -n1`
          git submodule update --recursive
          git status

      - uses: actions/cache@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Virtualenv cache - stable
        id: cache
        with:
          path: venv-stable
          # TODO: This line should only have the docs requirements, not dev, but we need to wait till the stable docs are post 1.0
          key: msprime-docs-venv-v7-${{ hashFiles('requirements/CI-docs/requirements.txt') }}-${{ hashFiles('requirements/development.txt')  }}

      - name: Build virtualenv
        if: steps.cache-stable.outputs.cache-hit != 'true' && steps.docs-cache.outputs.cache-hit != 'true'
        run: python -m venv venv-stable

      - name: Install deps
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          venv-stable/bin/activate
          [ -f requirements/CI-docs/requirements.txt ] && pip install -r requirements/CI-docs/requirements.txt
          [ -f requirements/development.txt ] && pip install -r requirements/development.txt
      - name: Build C module
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: venv-stable/bin/activate && make

      - name: Build Docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          rm -rf docs/_build
          venv-stable/bin/activate
          cd docs
          make

      - name: Copy docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run:
          cp -r docs/_build/html dist/stable

      - name: Upload msprime docs
        uses: actions/upload-artifact@v2
        with:
          name: msprime-docs
          path: dist/*

  build-tskit-docs:
    name: Build tskit docs
    needs: cancel-superseded
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout tskit
        with:
          ref: main
          repository: tskit-dev/tskit
          submodules: true
          fetch-depth: 0 # Needed for setuptools_scm to work correctly

      - name: Get commit SHA1 for cache
        run: git rev-parse HEAD > SHA1

      - uses: actions/cache@v2
        id: docs-cache
        name: Docs cache
        with:
          path: dist
          key: tskit-docs-v6-${{ hashFiles('SHA1') }}

      - uses: actions/setup-python@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Setup Pyton
        with:
          python-version: 3.8

      - uses: actions/cache@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Virtualenv cache - latest
        id: cache-latest
        with:
          path: venv-latest
          key: tskit-docs-venv-v4-${{ hashFiles('python/requirements/CI-docs/requirements.txt') }}

      - name: Build virtualenv
        if: steps.cache-latest.outputs.cache-hit != 'true' && steps.docs-cache.outputs.cache-hit != 'true'
        run: python -m venv venv-latest

      - name: Install deps
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install doxygen
          venv-latest/bin/activate && pip install -r python/requirements/CI-docs/requirements.txt

      - name: Build C module
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: venv-latest/bin/activate && make -C python

      - name: Build Docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          venv-latest/bin/activate
          cd docs
          make

      - name: Copy docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p dist
          cp -r docs/_build/html dist/latest

      - name: Checkout latest stable tag
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          git fetch --tags --recurse-submodules=no
          git checkout `git tag --list --sort=taggerdate | grep -vi "[baC]" | tail -n1`
          git submodule update --recursive
          git status

      - uses: actions/cache@v2
        if: steps.docs-cache.outputs.cache-hit != 'true'
        name: Virtualenv cache - stable
        id: cache
        with:
          path: venv-stable
          key: tskit-docs-venv-v5-${{ hashFiles('python/requirements/CI-docs/requirements.txt') }}

      - name: Build virtualenv
        if: steps.cache-stable.outputs.cache-hit != 'true' && steps.docs-cache.outputs.cache-hit != 'true'
        run: python -m venv venv-stable

      - name: Install deps
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: venv-stable/bin/activate && pip install -r python/requirements/CI-docs/requirements.txt

      - name: Build C module
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: venv-stable/bin/activate && make -C python

      - name: Build Docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          rm -rf docs/_build
          venv-stable/bin/activate
          cd docs
          make

      - name: Copy docs
        if: steps.docs-cache.outputs.cache-hit != 'true'
        run: |
          cp -r docs/_build/html dist/stable

      - name: Upload tskit docs
        uses: actions/upload-artifact@v2
        with:
          name: tskit-docs
          path: dist/*


  import-tutorials:
    name: Import tutorials
    needs: cancel-superseded
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        name: Checkout tutorials
        with:
          ref: gh-pages
          repository: tskit-dev/tutorials

      - name: Upload tutorials
        uses: actions/upload-artifact@v2
        with:
          name: tutorials
          path: .

  deploy:
    name: Deploy ðŸš€ (if on main branch)
    needs:
      - build-core-site
      - build-msprime-docs
      - build-tskit-docs
      - import-tutorials
    runs-on: ubuntu-20.04
    steps:
      - name: Download core site
        uses: actions/download-artifact@v2
        with:
          name: core-site
          path: site

      - name: Download msprime-docs
        uses: actions/download-artifact@v2
        with:
          name: msprime-docs
          path: site/msprime/docs

      - name: Download tskit-docs
        uses: actions/download-artifact@v2
        with:
          name: tskit-docs
          path: site/tskit/docs

      - name: Download tutorials
        uses: actions/download-artifact@v2
        with:
          name: tutorials
          path: site/tutorials

      - name: Pages config and tweaks
        run: |
          touch site/.nojekyll
          echo "tskit.dev" > site/CNAME
          echo "<meta http-equiv=\"Refresh\" content=\"0; url=/msprime/docs/stable\" />" > site/msprime/docs/index.html
          echo "<meta http-equiv=\"Refresh\" content=\"0; url=/tskit/docs/stable\" />" > site/tskit/docs/index.html

      - name: List site contents
        run: |
          ls -R

      - name: Upload site (for PR inspection)
        uses: actions/upload-artifact@v2
        with:
          name: site
          path: .

      - name: Deploy
        if: github.ref == 'refs/heads/main'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.ADMINBOT_TOKEN }}
          BRANCH: gh-pages
          FOLDER: site
          SINGLE_COMMIT: true
